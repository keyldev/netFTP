<UserControl x:Class="mvvm_ftpclient.MVVM.View.MainMenuView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:mvvm_ftpclient.MVVM.View"
             xmlns:viewModel="clr-namespace:mvvm_ftpclient.MVVM.ViewModel"
             mc:Ignorable="d" 
             d:DesignHeight="699" d:DesignWidth="1280">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#B27C7C7C"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF4F4F4F"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="BackForwardButtonsStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ButtonLoadClearStyle.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="ButtonLoadClearStyle.Pressed.Background" Color="#FFC4E5F6"/>
        <Style x:Key="ButtonLoadClearStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonLoadClearStyle.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonLoadClearStyle.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="FunctionalityButtons.MouseOver.Background" Color="#7F6E6E6E"/>
        <SolidColorBrush x:Key="FunctionalityButtons.Pressed.Background" Color="#7F373838"/>
        <Style x:Key="FunctionalityButtonsStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource FunctionalityButtons.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource FunctionalityButtons.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <UserControl.DataContext>
        <viewModel:MainMenuViewModel/>
    </UserControl.DataContext>
    <Grid>
        <Border BorderThickness="0" HorizontalAlignment="Left" Height="567" Margin="637,122,0,0" VerticalAlignment="Top" Width="7" Background="#FF404040"
                CornerRadius="4"/>
        <Grid HorizontalAlignment="Left" Height="35" Margin="0,35,0,0" VerticalAlignment="Top" Width="1280">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="151*"/>
                <ColumnDefinition Width="489*"/>
            </Grid.ColumnDefinitions>
            <TextBox x:Name="tbIPAddress" HorizontalAlignment="Left" VerticalContentAlignment="Center" BorderThickness="0" Height="22" Margin="80,7,0,0" 
                     TextWrapping="Wrap" Text="{Binding ServerAddress}" VerticalAlignment="Top" Width="120" BorderBrush="{x:Null}" >
                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="3"/>
                    </Style>
                </TextBox.Resources>
            </TextBox>
            <TextBox x:Name="tbPort" HorizontalAlignment="Left" VerticalContentAlignment="Center" 
                     BorderThickness="0" Height="22" Margin="286,7,0,0" TextWrapping="Wrap" Text="{Binding ServerPort}" 
                     VerticalAlignment="Top" Width="120" BorderBrush="{x:Null}" Grid.ColumnSpan="2" >
                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="3"/>
                    </Style>
                </TextBox.Resources>
            </TextBox>
            <TextBox x:Name="tbLogin" HorizontalAlignment="Left" VerticalContentAlignment="Center" 
                     BorderThickness="0" Height="22" Margin="190,7,0,0" TextWrapping="Wrap" Text="{Binding ServerLogin}" 
                     VerticalAlignment="Top" Width="120" BorderBrush="{x:Null}" Grid.Column="1" >
                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="3"/>
                    </Style>
                </TextBox.Resources>
            </TextBox>
            <TextBox x:Name="tbPassword" HorizontalAlignment="Left" VerticalContentAlignment="Center" 
                     BorderThickness="0" Height="22" Margin="400,7,0,0" TextWrapping="Wrap" Text="{Binding ServerPassword}"
                     VerticalAlignment="Top" Width="120" BorderBrush="{x:Null}" Grid.Column="1" >
                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="3"/>
                    </Style>
                </TextBox.Resources>
            </TextBox>
            <Button x:Name="bConnectToServer" Content="-&gt;" 
                    HorizontalAlignment="Left" Margin="886,4,0,0" 
                    VerticalAlignment="Top" Width="73" Height="28" BorderBrush="{x:Null}" BorderThickness="0"
                    Background="#FF0B8CC9" Foreground="White" Command="{Binding B_Connect}" Grid.Column="1">
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </Button.Resources>
            </Button>
            <Label Content="Host:" HorizontalContentAlignment="Center" HorizontalAlignment="Left" Margin="0,5,0,0" VerticalAlignment="Top" Width="80" Foreground="White" Height="26"/>
            <Label Content="Port:" HorizontalContentAlignment="Center" HorizontalAlignment="Left" Margin="202,5,0,0" VerticalAlignment="Top" Width="80" Foreground="White" Height="26"/>
            <Label Content="Login:" HorizontalContentAlignment="Center" HorizontalAlignment="Left" Margin="105,5,0,0" VerticalAlignment="Top" Width="80" Foreground="White" Grid.Column="1" Height="26"/>
            <Label Content="Password:" HorizontalContentAlignment="Center" HorizontalAlignment="Left" Margin="315,5,0,0" VerticalAlignment="Top" Width="80" Foreground="White" Grid.Column="1" Height="26"/>
        </Grid>
        <Grid HorizontalAlignment="Left" Height="28" Margin="0,6,0,0" VerticalAlignment="Top" Width="1280">
            <Button Content="&lt;" HorizontalAlignment="Left" Margin="3,2,0,0" VerticalAlignment="Top" Width="28"  Command="{Binding GoBackClick}"
                BorderThickness="0" Style="{DynamicResource BackForwardButtonsStyle}" BorderBrush="{x:Null}" Background="#FF5D5D5D" Foreground="White" Height="22" >
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="3"/>
                    </Style>
                </Button.Resources>
            </Button>
            <Button HorizontalAlignment="Left" Margin="36,2,0,0" VerticalAlignment="Top" Width="28"  Command="{Binding RefreshConnectionButton}"
                BorderThickness="0" Style="{DynamicResource BackForwardButtonsStyle}" BorderBrush="{x:Null}" Background="#FF5D5D5D" Foreground="White" Height="22">
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="3"/>
                    </Style>
                </Button.Resources>
                <Grid>
                    <Image Source="/mvvm_ftpclient;component/Assets/Interface/undo-arrow.png"/>
                </Grid>
            </Button>
            <TextBox HorizontalAlignment="Left" Height="24" Margin="75,2,0,0" TextWrapping="Wrap" Text="{Binding BrowserUrl}" VerticalAlignment="Top" Width="1188"
                BorderThickness="0" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" IsReadOnly="True">
                <TextBox.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="3"/>
                    </Style>
                </TextBox.Resources>
            </TextBox>
        </Grid>
        <Grid HorizontalAlignment="Left" Height="616" Margin="10,83,0,0" VerticalAlignment="Top" Width="622">
            <Grid HorizontalAlignment="Left" Height="162" VerticalAlignment="Top" Width="622" Margin="0,39,0,0">
                <TextBlock TextWrapping="Wrap" Text="+" Margin="279,21,277,0" 
                           Foreground="White" FontSize="72"
                           TextAlignment="Center" Height="88" VerticalAlignment="Top"/>
                <Rectangle x:Name="RDropZone" Stroke="White" Margin="10,0,0,0" RadiusX="10" RadiusY="10"
                           StrokeDashArray="10" StrokeThickness="3" Fill="#4CA2A2A2" Drop="RDropZone_Drop"
                           AllowDrop="true" Height="148" VerticalAlignment="Top"/>
            </Grid>
            <Grid HorizontalAlignment="Left" Height="333" Margin="0,201,0,0" VerticalAlignment="Top" Width="612">
                <ScrollViewer HorizontalAlignment="Left" Height="333" VerticalAlignment="Top" Width="612"
                              HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                    <ItemsControl x:Name="filesList" BorderBrush="Black" BorderThickness="0" Height="333" Width="612"/>
                </ScrollViewer>
            </Grid>
            <Grid HorizontalAlignment="Left" Height="82" VerticalAlignment="Top" Width="622" Margin="0,534,0,0">
                <Button Content="Upload" HorizontalAlignment="Left" VerticalAlignment="Top" Command="{Binding UploadFileClick}"
                        Width="294" Margin="0,5,0,0" Height="67" BorderThickness="0" Background="#FF00A4D4" Style="{DynamicResource ButtonLoadClearStyle}" Foreground="White">
                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="6"/>
                        </Style>
                    </Button.Resources>
                </Button>
                <Button x:Name="bClearFilesList" Content="Clear" HorizontalAlignment="Left"
                        VerticalAlignment="Top" Width="293" Margin="319,5,0,0" Height="67"
                        Click="bClearFilesList_Click" BorderThickness="0" Background="#FF00A4D4" Foreground="White">
                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="6"/>
                        </Style>
                    </Button.Resources>
                </Button>
            </Grid>
            <Grid HorizontalAlignment="Left" Height="34" VerticalAlignment="Top" Width="622">
                <Button x:Name="bDeleteFileFromServer" HorizontalAlignment="Left"
                    VerticalAlignment="Top" Width="20" Command="{Binding DeleteFileClick}"
                    BorderThickness="0" Background="Transparent" Height="20" Style="{DynamicResource FunctionalityButtonsStyle}">
                    <Grid>
                        <Image Source="/mvvm_ftpclient;component/Assets/Interface/bucket.png" Stretch="Fill"/>
                    </Grid>
                </Button>
                <Button x:Name="bDownloadFileFromServer" HorizontalAlignment="Left" Margin="27,0,0,0"
                VerticalAlignment="Top" Width="23" Command="{Binding DownloadClick}"
                BorderThickness="0" Background="Transparent" Height="20" Style="{DynamicResource FunctionalityButtonsStyle}">
                    <Grid>
                        <Image Source="/mvvm_ftpclient;component/Assets/Interface/edit_name.png" Stretch="Fill"/>
                    </Grid>
                </Button>
                <Border BorderThickness="0" CornerRadius="3" HorizontalAlignment="Left" Height="4" VerticalAlignment="Top" Width="622" Margin="0,30,0,0" Background="#FF4D4D4D"/>
            </Grid>

        </Grid>
        <Grid Margin="649,83,10,10">

            <ItemsControl ItemsSource="{Binding TiledFiles}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Rows="4"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <local:TiledFileView/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </Grid>
</UserControl>
